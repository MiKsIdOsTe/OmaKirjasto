/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package omamgkirjasto;

import java.awt.Component;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lentt
 */
public class MgKirjasto extends javax.swing.JFrame {

    luoYhteys db = new luoYhteys();

    /**
     * Creates new form MgKirjasto
     */
    public MgKirjasto() throws ClassNotFoundException, SQLException {
        initComponents();
        tableload1(tbManga);
        comboload(comboManga);
        idloadManga(txtMgID);

        tableload2(tbKirjasto);
        comboload2(comboKirjasto);
        idloadKirjasto(txtKjsID);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btMgLisaa = new javax.swing.JButton();
        btMgPaivita = new javax.swing.JButton();
        btMgPoista = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtMgID = new javax.swing.JTextField();
        txtMgNimi = new javax.swing.JTextField();
        txtMgTekija = new javax.swing.JTextField();
        txtMgKustantaja = new javax.swing.JTextField();
        txtMgKieli = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbKirjasto = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbManga = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        comboManga = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        txtKjsID = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtKjsNro = new javax.swing.JTextField();
        comboKirjasto = new javax.swing.JComboBox<>();
        jPanel7 = new javax.swing.JPanel();
        btKjsLisaa = new javax.swing.JButton();
        btKjsPaivita = new javax.swing.JButton();
        btKjsPoista = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btMgLisaa.setText("Lisää");
        btMgLisaa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMgLisaaActionPerformed(evt);
            }
        });

        btMgPaivita.setText("Päivitä");
        btMgPaivita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMgPaivitaActionPerformed(evt);
            }
        });

        btMgPoista.setText("Poista");
        btMgPoista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMgPoistaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btMgPoista, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btMgLisaa, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btMgPaivita, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btMgLisaa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btMgPaivita)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btMgPoista)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel5.setText("Manga ID:");

        jLabel1.setText("Mangan nimi:");

        jLabel2.setText("Tekijä:");

        jLabel3.setText("Kustantaja:");

        jLabel4.setText("Kieli:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(31, 31, 31)
                        .addComponent(txtMgID))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(12, 12, 12)
                        .addComponent(txtMgNimi))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(50, 50, 50)
                        .addComponent(txtMgTekija))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(62, 62, 62)
                        .addComponent(txtMgKieli))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtMgKustantaja, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtMgID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtMgNimi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtMgTekija, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtMgKustantaja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(txtMgKieli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        tbKirjasto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Kirjasto ID", "Nimi", "Tekijä", "Kustantaja", "Kieli", "Nro"
            }
        ));
        tbKirjasto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbKirjastoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbKirjasto);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(143, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Kirjasto", jPanel3);

        tbManga.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Nimi", "Tekijä", "Kustantaja", "Kieli"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbManga.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbMangaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbManga);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(143, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Manga", jPanel4);

        comboManga.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                comboMangaPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        comboManga.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboMangaMouseClicked(evt);
            }
        });
        comboManga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboMangaActionPerformed(evt);
            }
        });

        jLabel6.setText("Kirjasto ID:");

        jLabel7.setText("Nro:");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboKirjasto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboManga, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(txtKjsID, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtKjsNro, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(txtKjsID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(comboManga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtKjsNro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(comboKirjasto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        btKjsLisaa.setText("Lisää");
        btKjsLisaa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btKjsLisaaActionPerformed(evt);
            }
        });

        btKjsPaivita.setText("Päivitä");
        btKjsPaivita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btKjsPaivitaActionPerformed(evt);
            }
        });

        btKjsPoista.setText("Poista");
        btKjsPoista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btKjsPoistaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btKjsPaivita, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btKjsLisaa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btKjsPoista)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btKjsLisaa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btKjsPaivita)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btKjsPoista)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 612, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(72, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(485, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(227, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btMgLisaaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMgLisaaActionPerformed
        System.out.println("Alkaa21");
        try {

            //Lisätään tiedot tietokantaan
            db.putData("INSERT INTO MANGA(NIMI,TEKIJA,KUSTANTAJA,KIELI) "
                    + "values('" + txtMgNimi.getText() + "','" + txtMgTekija.getText() + "','" + txtMgKustantaja.getText()
                    + "','" + txtMgKieli.getText() + "')");

            System.out.println("Alkaa22");
            clear();
            tableload1(tbManga);
            comboload(comboManga);
            idloadManga(txtMgID);

            tableload2(tbKirjasto);
            comboload2(comboKirjasto);
            idloadKirjasto(txtKjsID);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MgKirjasto.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex);
        } catch (SQLException ex) {
            Logger.getLogger(MgKirjasto.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex);
        }
        System.out.println("Alkaa23");
    }//GEN-LAST:event_btMgLisaaActionPerformed

    private void tbMangaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbMangaMouseClicked
        //Klikkaamalla taulukkossa jotakin tietoa ne päivittyvät tekstikenttiin
        //Valitun tiedon nimi (paikka 0) lisätään Mangan nimi:-tekstikenttään
        txtMgID.setText(String.valueOf(tbManga.getValueAt(tbManga.getSelectedRow(), 0)));
        //Valitun tiedon nimi (paikka 1) lisätään Mangan nimi:-tekstikenttään
        txtMgNimi.setText(String.valueOf(tbManga.getValueAt(tbManga.getSelectedRow(), 1)));
        //Valitun tiedon tekijä (paikka 1) lisätään tekijä:-tekstikenttään
        txtMgTekija.setText(String.valueOf(tbManga.getValueAt(tbManga.getSelectedRow(), 2)));
        //Valitun tiedon kustantaja (paikka 2) lisätään kustantaja:-tekstikenttään
        txtMgKustantaja.setText(String.valueOf(tbManga.getValueAt(tbManga.getSelectedRow(), 3)));
        //Valitun tiedon kieli (paikka 3) lisätään kieli:-tekstikenttään
        txtMgKieli.setText(String.valueOf(tbManga.getValueAt(tbManga.getSelectedRow(), 4)));

        try {
            int valittuID = Integer.parseInt(String.valueOf(tbManga.getValueAt(tbManga.getSelectedRow(), 0)));
            ResultSet rset;
            //comboManga.removeAllItems();

            rset = db.getData("SELECT * FROM MANGA where ID= " + valittuID + "");

            while (rset.next()) {
                comboManga.setSelectedItem(rset.getInt("ID") + " " + rset.getString("NIMI") + " " + rset.getString("KIELI"));
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MgKirjasto.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex);
        } catch (SQLException ex) {
            Logger.getLogger(MgKirjasto.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex);
        }

        //While silmukka

    }//GEN-LAST:event_tbMangaMouseClicked

    private void btMgPaivitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMgPaivitaActionPerformed
        try {
            //Luodaan statement (kysely)
            System.out.println("Päivitä1");

            String valinta = (String) comboManga.getSelectedItem();
            String[] nimet = valinta.split(" ");
            int mangaId = Integer.parseInt(nimet[0]);

            String nimi = txtMgNimi.getText();
            String tekija = txtMgTekija.getText();
            String kustantaja = txtMgKustantaja.getText();
            String kieli = txtMgKieli.getText();

            db.putData("UPDATE MANGA SET NIMI  ='" + nimi + "', TEKIJA = '" + tekija + "', KUSTANTAJA ='" + kustantaja + "',  KIELI='" + kieli + "'  WHERE ID = " + mangaId);

            System.out.println("Päivitä5");
            clear();
            System.out.println("Päivitä6");
            //Päivitetään taulukko, jotta uusimmat muutokset näkyvät
            tableload1(tbManga);
            System.out.println("Päivitä7");
            comboload(comboManga);
            System.out.println("Päivitä8");
            idloadManga(txtMgID);

            tableload2(tbKirjasto);
            comboload2(comboKirjasto);
            idloadKirjasto(txtKjsID);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MgKirjasto.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex);
        } catch (SQLException ex) {
            Logger.getLogger(MgKirjasto.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex);
        }
        System.out.println("Päivitä9");
    }//GEN-LAST:event_btMgPaivitaActionPerformed

    private void btMgPoistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMgPoistaActionPerformed
        try {
            String valinta = (String) comboManga.getSelectedItem();
            String[] nimet = valinta.split(" ");
            int mangaId = Integer.parseInt(nimet[0]);
            db.putData("DELETE FROM MANGA WHERE ID = " + mangaId);
            db.putData("DELETE FROM MGKIRJASTO WHERE ID_MANGA = " + mangaId);
            clear();
            System.out.println("Poista6");
            //Päivitetään taulukko, jotta uusimmat muutokset näkyvät
            tableload1(tbManga);
            System.out.println("Poista7");
            comboload(comboManga);
            System.out.println("Poista8");
            idloadManga(txtMgID);
            tableload2(tbKirjasto);
            comboload2(comboKirjasto);
            idloadKirjasto(txtKjsID);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MgKirjasto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MgKirjasto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btMgPoistaActionPerformed

    private void comboMangaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboMangaMouseClicked

    }//GEN-LAST:event_comboMangaMouseClicked

    private void comboMangaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboMangaActionPerformed

    }//GEN-LAST:event_comboMangaActionPerformed

    private void comboMangaPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_comboMangaPopupMenuWillBecomeInvisible
        try {

            String valinta = (String) comboManga.getSelectedItem();
            String[] nimet = valinta.split(" ");
            int mangaID = Integer.parseInt(nimet[0]);

            ResultSet rset = db.getData("SELECT * FROM MANGA WHERE ID =" + mangaID);
            while (rset.next()) {

                txtMgID.setText(rset.getString("ID"));
                txtMgNimi.setText(rset.getString("NIMI"));
                txtMgTekija.setText(rset.getString("TEKIJA"));
                txtMgKustantaja.setText(rset.getString("KUSTANTAJA"));
                txtMgKieli.setText(rset.getString("KIELI"));
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MgKirjasto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MgKirjasto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_comboMangaPopupMenuWillBecomeInvisible

    private void btKjsLisaaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btKjsLisaaActionPerformed
        System.out.println("Alkaa211");
        try {

            String valinta = (String) comboManga.getSelectedItem();
            String[] nimet = valinta.split(" ");
            int mangaId = Integer.parseInt(nimet[0]);

            ResultSet rset = db.getData("SELECT * FROM MANGA WHERE ID = " + mangaId);

            // ResultSet rset2 = db.getData("SELECT * FROM MGKIRJASTO INNER JOIN MANGA  ON MGKIRJASTO.ID_MANGA = MANGA.ID");
            //Lisätään tiedot tietokantaan
            System.out.println("Välitarkistus");
            while (rset.next()) {
                // while (rset2.next()) {
                db.putData("INSERT INTO MGKIRJASTO(ID_MANGA,NRO) VALUES('" + rset.getInt("ID") + "','" + txtKjsNro.getText() + "')");

            }
            //}
            System.out.println("Alkaa222");
            clear();
            tableload1(tbManga);
            comboload(comboManga);
            idloadManga(txtMgID);

            tableload2(tbKirjasto);
            comboload2(comboKirjasto);
            idloadKirjasto(txtKjsID);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MgKirjasto.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex);
        } catch (SQLException ex) {
            Logger.getLogger(MgKirjasto.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex);
        }
        System.out.println("Alkaa233");
    }//GEN-LAST:event_btKjsLisaaActionPerformed

    private void btKjsPaivitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btKjsPaivitaActionPerformed
        try {
            //Luodaan statement (kysely)
            System.out.println("Päivitä1");

            String valinta = (String) comboManga.getSelectedItem();
            String[] nimet = valinta.split(" ");
            int mangaId = Integer.parseInt(nimet[0]);

            String kjsValinta = (String) comboKirjasto.getSelectedItem();
            String[] kjsNimet = kjsValinta.split(" ");
            int kirjastoId = Integer.parseInt(kjsNimet[0]);

            String nro = txtKjsNro.getText();
            System.out.println("Välitarkistus");

            db.putData("UPDATE MGKIRJASTO SET ID_MANGA  ='" + mangaId + "', NRO = '" + nro + "'  WHERE KIRJASTOID =" + kirjastoId);

            System.out.println("Päivitä5");
            clear();
            System.out.println("Päivitä6");
            //Päivitetään taulukko, jotta uusimmat muutokset näkyvät
            tableload1(tbManga);
            System.out.println("Päivitä7");
            comboload(comboManga);
            System.out.println("Päivitä8");
            idloadManga(txtMgID);

            tableload2(tbKirjasto);
            comboload2(comboKirjasto);
            idloadKirjasto(txtKjsID);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MgKirjasto.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex);
        } catch (SQLException ex) {
            Logger.getLogger(MgKirjasto.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex);
        }
        System.out.println("Päivitä9");
    }//GEN-LAST:event_btKjsPaivitaActionPerformed

    private void btKjsPoistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btKjsPoistaActionPerformed
        try {
            String valinta = (String) comboKirjasto.getSelectedItem();
            String[] nimet = valinta.split(" ");
            int kirjastoId = Integer.parseInt(nimet[0]);

            db.putData("DELETE FROM MGKIRJASTO WHERE KIRJASTOID = " + kirjastoId);
            clear();
            System.out.println("Poista6");
            //Päivitetään taulukko, jotta uusimmat muutokset näkyvät
            tableload1(tbManga);
            System.out.println("Poista7");
            comboload(comboManga);
            System.out.println("Poista8");
            idloadManga(txtMgID);
            tableload2(tbKirjasto);
            comboload2(comboKirjasto);
            idloadKirjasto(txtKjsID);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MgKirjasto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MgKirjasto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btKjsPoistaActionPerformed

    private void tbKirjastoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbKirjastoMouseClicked
        //Klikkaamalla taulukkossa jotakin tietoa ne päivittyvät tekstikenttiin
        //Valitun tiedon nimi (paikka 0) lisätään Mangan nimi:-tekstikenttään
        txtKjsID.setText(String.valueOf(tbKirjasto.getValueAt(tbKirjasto.getSelectedRow(), 0)));
        //Valitun tiedon nimi (paikka 1) lisätään Mangan nimi:-tekstikenttään
        txtMgNimi.setText(String.valueOf(tbKirjasto.getValueAt(tbKirjasto.getSelectedRow(), 1)));
        //Valitun tiedon tekijä (paikka 1) lisätään tekijä:-tekstikenttään
        txtMgTekija.setText(String.valueOf(tbKirjasto.getValueAt(tbKirjasto.getSelectedRow(), 2)));
        //Valitun tiedon kustantaja (paikka 2) lisätään kustantaja:-tekstikenttään
        txtMgKustantaja.setText(String.valueOf(tbKirjasto.getValueAt(tbKirjasto.getSelectedRow(), 3)));
        //Valitun tiedon kieli (paikka 3) lisätään kieli:-tekstikenttään
        txtMgKieli.setText(String.valueOf(tbKirjasto.getValueAt(tbKirjasto.getSelectedRow(), 4)));
        //Valitun tiedon kieli (paikka 3) lisätään kieli:-tekstikenttään
        txtKjsNro.setText(String.valueOf(tbKirjasto.getValueAt(tbKirjasto.getSelectedRow(), 5)));

        try {
            //Haetaan KirjastoID taulukosta ja muutetaan se int muotoon.
            int valittuKjsID = Integer.parseInt(String.valueOf(tbKirjasto.getValueAt(tbKirjasto.getSelectedRow(), 0)));
            //Haetaan tiedot comboManga-valikkoon
            ResultSet rset = db.getData("SELECT * FROM MGKIRJASTO INNER JOIN MANGA ON MGKIRJASTO.ID_MANGA = MANGA.ID WHERE KIRJASTOID= " + valittuKjsID + "");
            //Lisätään tiedot comboManga-valikkoon
            while (rset.next()) {
                comboManga.setSelectedItem(rset.getInt("ID_MANGA") + " " + rset.getString("NIMI") + " " + rset.getString("KIELI"));
                //Lisätään txtMgID-kenttään Manga ID 
                txtMgID.setText(rset.getString("ID"));
            }

            //Haetaan tiedot comboKirjasto-valikkoon
            ResultSet rset2 = db.getData("SELECT * FROM MGKIRJASTO INNER JOIN MANGA ON MGKIRJASTO.ID_MANGA = MANGA.ID WHERE KIRJASTOID= " + valittuKjsID + "");
            //Lisätään tiedot comboKirjasto-valikkoon
            while (rset2.next()) {
                comboKirjasto.setSelectedItem(rset2.getInt("KIRJASTOID") + " " + rset2.getString("NIMI") + " " + rset2.getString("NRO"));
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MgKirjasto.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex);
        } catch (SQLException ex) {
            Logger.getLogger(MgKirjasto.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex);
        }

    }//GEN-LAST:event_tbKirjastoMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MgKirjasto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MgKirjasto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MgKirjasto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MgKirjasto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MgKirjasto().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(MgKirjasto.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(MgKirjasto.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btKjsLisaa;
    private javax.swing.JButton btKjsPaivita;
    private javax.swing.JButton btKjsPoista;
    private javax.swing.JButton btMgLisaa;
    private javax.swing.JButton btMgPaivita;
    private javax.swing.JButton btMgPoista;
    private javax.swing.JComboBox<String> comboKirjasto;
    private javax.swing.JComboBox<String> comboManga;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tbKirjasto;
    private javax.swing.JTable tbManga;
    private javax.swing.JTextField txtKjsID;
    private javax.swing.JTextField txtKjsNro;
    private javax.swing.JTextField txtMgID;
    private javax.swing.JTextField txtMgKieli;
    private javax.swing.JTextField txtMgKustantaja;
    private javax.swing.JTextField txtMgNimi;
    private javax.swing.JTextField txtMgTekija;
    // End of variables declaration//GEN-END:variables

    private void clear() {
        //Tyhjennetään teksti kentät
        txtMgNimi.setText(null);
        txtMgTekija.setText(null);
        txtMgKustantaja.setText(null);
        txtMgKieli.setText(null);
        txtKjsNro.setText(null);
    }

    //MANGA
    private void tableload1(JTable jt) throws ClassNotFoundException, SQLException {
        DefaultTableModel dt = (DefaultTableModel) jt.getModel();
        //Asetetaan rivit aloittamaan 0
        dt.setRowCount(0);
        //Haetaan tiedot tietokannasta ja lisätään ne taulukkoon
        ResultSet rset = db.getData("SELECT * FROM MANGA");

        while (rset.next()) {
            Vector v = new Vector();
            v.add(rset.getString(1));
            v.add(rset.getString(2));
            v.add(rset.getString(3));
            v.add(rset.getString(4));
            v.add(rset.getString(5));

            dt.addRow(v);
        }
    }

    private void comboload(JComboBox jl) throws ClassNotFoundException, SQLException {
        comboManga.removeAllItems();
        //Haetaan tiedot tietokannasta ja lisätään ne valintaComboon. 
        ResultSet rset = db.getData("SELECT * FROM MANGA");
        while (rset.next()) {
            String pat = rset.getInt("ID") + " " + rset.getString("NIMI") + " " + rset.getString("KIELI");
            comboManga.addItem(pat);
        }
    }

    private void idloadManga(JTextField jText) throws ClassNotFoundException, SQLException {
        //Haetaan viimeisin vapaana oleva ID
        ResultSet rset = db.getData("select max(ID) from MANGA");
        while (rset.next()) {
            int i = rset.getInt(1);
            i = i + 1;
            jText.setText(String.valueOf(i));
        }
    }

    //MGKIRJASTO
    private void tableload2(JTable jt2) throws ClassNotFoundException, SQLException {
        DefaultTableModel dt2 = (DefaultTableModel) jt2.getModel();
        //Asetetaan rivit aloittamaan 0
        dt2.setRowCount(0);
        //Haetaan tiedot tietokannasta ja lisätään ne taulukkoon
        ResultSet rset = db.getData("SELECT MGKIRJASTO.KIRJASTOID, MANGA.NIMI, MANGA.TEKIJA, MANGA.KUSTANTAJA, MANGA.KIELI, MGKIRJASTO.NRO "
                + "FROM MGKIRJASTO INNER JOIN MANGA ON MGKIRJASTO.ID_MANGA = MANGA.ID");

        while (rset.next()) {
            Vector v = new Vector();
            v.add(rset.getString(1));
            v.add(rset.getString(2));
            v.add(rset.getString(3));
            v.add(rset.getString(4));
            v.add(rset.getString(5));
            v.add(rset.getString(6));

            dt2.addRow(v);
        }
    }

    private void comboload2(JComboBox jl2) throws ClassNotFoundException, SQLException {
        comboKirjasto.removeAllItems();
        //Haetaan tiedot tietokannasta ja lisätään ne valintaComboon. 
        ResultSet rset = db.getData("SELECT * FROM MGKIRJASTO INNER JOIN MANGA ON MGKIRJASTO.ID_MANGA = MANGA.ID");
        while (rset.next()) {
            String pat = rset.getInt("KIRJASTOID") + " " + rset.getString("NIMI") + " " + rset.getString("NRO");
            comboKirjasto.addItem(pat);
        }
    }

    private void idloadKirjasto(JTextField jText2) throws ClassNotFoundException, SQLException {
        //Haetaan viimeisin vapaana oleva ID
        ResultSet rset = db.getData("select max(KIRJASTOID) from MGKIRJASTO");
        while (rset.next()) {
            int i = rset.getInt(1);
            i = i + 1;
            jText2.setText(String.valueOf(i));
        }
    }
}
